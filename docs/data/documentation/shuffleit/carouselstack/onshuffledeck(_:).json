{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onShuffleDeck"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"perform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleDeckContext","preciseIdentifier":"s:9ShuffleIt0A11DeckContextV","text":"ShuffleDeckContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view with the given action for side effect of shuffling."}]}]},{"kind":"parameters","parameters":[{"name":"perform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that exposes shuffle deck context to perform everytime shuffling occurs."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using "},{"type":"codeVoice","code":"onShuffleDeck(_:)"},{"type":"text","text":" modifier, it can inject a closure that exposes shuffling information - "},{"type":"codeVoice","code":"ShuffleDeckContext"},{"type":"text","text":" through its parameter to perform a particular task whenever the user shuffle content views or shuffling is triggered programmatically."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following piece of code provides the usage of "},{"type":"codeVoice","code":"onShuffleDeck(_:)"},{"type":"text","text":" modifier."}]},{"type":"codeListing","syntax":"swift","code":["let colors: [Color] = [.blue, .brown, .black, .cyan, .green, .indigo, .pink, .purple, .red, .orange, .yellow]","var body: some View {","    ShuffleDeck(","        colors,","        initialIndex: 0","    ) { color in","        color","            .frame(width: 200, height: 300)","            .cornerRadius(16)","    }","    .onShuffleDeck { (context: ShuffleDeckContext) in","        \/* some stuff *\/","    }","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/shuffleit\/carouselstack\/onshuffledeck(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/CarouselStack\/onShuffleDeck(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A modifier that listens shuffling events occurring on the shuffle deck view."}],"kind":"symbol","metadata":{"role":"symbol","title":"onShuffleDeck(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onShuffleDeck"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"ShuffleDeckContext","preciseIdentifier":"s:9ShuffleIt0A11DeckContextV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewP9ShuffleItE02onD4DeckyQryAD0dG7ContextVcF::SYNTHESIZED::s:9ShuffleIt13CarouselStackV","extendedModule":"SwiftUI","modules":[{"name":"ShuffleIt"}]},"hierarchy":{"paths":[["doc:\/\/ShuffleIt\/documentation\/ShuffleIt","doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/CarouselStack","doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/CarouselStack\/View-Implementations"]]},"references":{"doc://ShuffleIt/documentation/ShuffleIt":{"role":"collection","title":"ShuffleIt","abstract":[{"type":"text","text":"A UI element library for "},{"type":"strong","inlineContent":[{"type":"text","text":"SwiftUI"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt","kind":"symbol","type":"topic","url":"\/documentation\/shuffleit"},"doc://ShuffleIt/documentation/ShuffleIt/CarouselStack/View-Implementations":{"role":"collectionGroup","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/CarouselStack\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/shuffleit\/carouselstack\/view-implementations"},"doc://ShuffleIt/documentation/ShuffleIt/CarouselStack/onShuffleDeck(_:)":{"role":"symbol","title":"onShuffleDeck(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onShuffleDeck"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"ShuffleDeckContext","preciseIdentifier":"s:9ShuffleIt0A11DeckContextV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"A modifier that listens shuffling events occurring on the shuffle deck view."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/CarouselStack\/onShuffleDeck(_:)","kind":"symbol","type":"topic","url":"\/documentation\/shuffleit\/carouselstack\/onshuffledeck(_:)"},"doc://ShuffleIt/documentation/ShuffleIt/ShuffleDeckContext":{"role":"symbol","title":"ShuffleDeckContext","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShuffleDeckContext"}],"abstract":[{"type":"text","text":"A structure that provides information about shuffling."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleDeckContext","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShuffleDeckContext"}],"url":"\/documentation\/shuffleit\/shuffledeckcontext"},"doc://ShuffleIt/documentation/ShuffleIt/CarouselStack":{"role":"symbol","title":"CarouselStack","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CarouselStack"}],"abstract":[{"type":"text","text":"A stack view which provides carousel-style sliding behaviour to slide contents to left and right."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/CarouselStack","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CarouselStack"}],"url":"\/documentation\/shuffleit\/carouselstack"}}}