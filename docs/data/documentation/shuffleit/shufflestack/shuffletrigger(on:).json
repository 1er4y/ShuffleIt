{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffleTrigger"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"publisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Failure"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleDirection","preciseIdentifier":"s:9ShuffleIt0A9DirectionO","text":"ShuffleDirection"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A view with the given publisher object."}]}]},{"kind":"parameters","parameters":[{"name":"publisher","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A publisher object that fires "},{"type":"codeVoice","code":"ShuffleDirection"},{"type":"text","text":" values."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In purpose of shuffling programmatically such as using timer, "},{"type":"codeVoice","code":"ShuffleStack"},{"type":"text","text":" accepts events via "},{"type":"codeVoice","code":"shuffleTrigger(on:)"},{"type":"text","text":" modifier which is needed to inject an instance of publisher with "},{"type":"codeVoice","code":"ShuffleDirection"},{"type":"text","text":" output type and "},{"type":"codeVoice","code":"Never"},{"type":"text","text":" failure type."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example provides the programmatic way of triggering shuffle event by sending "},{"type":"codeVoice","code":"ShuffleDirection"},{"type":"text","text":" value through the publisher."}]},{"type":"codeListing","syntax":"swift","code":["let colors: [Color] = [.blue, .brown, .black, .cyan, .green, .indigo, .pink, .purple, .red, .orange, .yellow]","let shufflePublisher = PassthroughSubject<ShuffleDirection, Never>()","var body: some View {","    ShuffleStack(","        colors,","        initialIndex: 0","    ) { color in","        color","            .frame(height: 200)","            .cornerRadius(16)","    }","    .shuffleTrigger(on: shufflePublisher)","}","shufflePublisher.send(.left)","shufflePublisher.send(.right)"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/shuffleit\/shufflestack\/shuffletrigger(on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleStack\/shuffleTrigger(on:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A modifier that accpets events of direction to perform programmatic shuffling."}],"kind":"symbol","metadata":{"role":"symbol","title":"shuffleTrigger(on:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffleTrigger"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewP9ShuffleItE14shuffleTrigger2onQrqd___t7Combine9PublisherRd__s5NeverO7FailureRtd__AD0D9DirectionO6OutputRtd__lF::SYNTHESIZED::s:9ShuffleIt0A5StackV","extendedModule":"SwiftUI","modules":[{"name":"ShuffleIt"}]},"hierarchy":{"paths":[["doc:\/\/ShuffleIt\/documentation\/ShuffleIt","doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleStack","doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleStack\/View-Implementations"]]},"references":{"doc://ShuffleIt/documentation/ShuffleIt/ShuffleStack":{"role":"symbol","title":"ShuffleStack","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShuffleStack"}],"abstract":[{"type":"text","text":"A stack view that provides shuffling behaviour to swipe contents to left and right."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleStack","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShuffleStack"}],"url":"\/documentation\/shuffleit\/shufflestack"},"doc://ShuffleIt/documentation/ShuffleIt/ShuffleDirection":{"role":"symbol","title":"ShuffleDirection","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ShuffleDirection"}],"abstract":[{"type":"text","text":"An enumeration of shuffle direction."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleDirection","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ShuffleDirection"}],"url":"\/documentation\/shuffleit\/shuffledirection"},"doc://ShuffleIt/documentation/ShuffleIt":{"role":"collection","title":"ShuffleIt","abstract":[{"type":"text","text":"A UI element library for "},{"type":"strong","inlineContent":[{"type":"text","text":"SwiftUI"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt","kind":"symbol","type":"topic","url":"\/documentation\/shuffleit"},"doc://ShuffleIt/documentation/ShuffleIt/ShuffleStack/shuffleTrigger(on:)":{"role":"symbol","title":"shuffleTrigger(on:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shuffleTrigger"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"on"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"A modifier that accpets events of direction to perform programmatic shuffling."}],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleStack\/shuffleTrigger(on:)","kind":"symbol","type":"topic","url":"\/documentation\/shuffleit\/shufflestack\/shuffletrigger(on:)"},"doc://ShuffleIt/documentation/ShuffleIt/ShuffleStack/View-Implementations":{"role":"collectionGroup","title":"View Implementations","abstract":[],"identifier":"doc:\/\/ShuffleIt\/documentation\/ShuffleIt\/ShuffleStack\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/shuffleit\/shufflestack\/view-implementations"}}}